Time.now
eixt
exit
Time
Time.local.zone
Time.local(2021).zone
User.all
pp $LOAD_PATH
exit
Hirb::View.enabled?
ls
Hirb::View.enabled?
eixt
exit
eixt
exit
users.recode
users.record
User.all
User.all
User.all
User.all
exit
eixt
exit
User.all
eexit
exit
payload
payload
secret_key = Rails.application.credentials.secret_key_base
payload
payload = { sub:1 }
payload
secret_key = Rails.application.credentials.secret_key_base
token = JWT.encode(payload, secret_key)
token
JWT.decode(token, secret_key)
exit
UserAuth.token_issuer
exit
User.first
reload
reload!
User.first
user.remeber("a")
user = User.first
user.remeber("a")
user.remember("a")
user.fist
user
user.forget
user
exit
token = UserAuth::AccessToken.new
token = UserAuth::AccessToken.new(user_id: user.id)
user = User.first
token = UserAuth::AccessToken.new(user_id: user.id)
token
token
token
token
token = UserAuth::AccessToken.new(user_id: user.id)
token = UserAuth::AccessToken.new(user_id: user.id)
token
è‹±
exit
token = UserAuth::AccessToken.new(user_id: user.id)
user = User.first
token = UserAuth::AccessToken.new(user_id: user.id)
token
reload
reload
load
load
load
load
token = UserAuth::AccessToken.new(user_id: user.id)
token
token
token = UserAuth::AccessToken.new(user_id: user.id)
token
load
loadl
loadl
load
eixt
exit
load
user = User.first
user = User.first
token = UserAuth::AccessToken.new(user_id: user.id)
token
exit
User.first.as_json
eix
exit
